{"ast":null,"code":"var _jsxFileName = \"/Users/johann/Documents/Johann PC/Documentos/Mis documentos/React/students-app/src/components/Query.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport StudentService from \"../services/StudentService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Query(props) {\n  _s();\n\n  const {\n    studentId,\n    handleChange\n  } = props;\n  const [studentName, setStudentName] = React.useState(\"\");\n  const [searchedStudentId, setSearchedStudentId] = React.useState();\n\n  async function searchStudent() {\n    const fetchData = async () => {\n      try {\n        const response = await StudentService.getStudentById(studentId);\n        console.log(response.data);\n        return response.data;\n      } catch (error) {\n        setStudentName(\"\");\n        alert(\"Student not found\");\n        console.log(error);\n      }\n    };\n\n    const student = async () => await fetchData(); //console.log(student);\n    // const data = await fetch(`http://localhost:8080/student/${studentId}`)\n    //   .then((response) => response.json())\n    //   .catch(() => {\n    //     return null;\n    //   });\n    // if (!data) {\n    //   setStudentName(\"\");\n    //   alert(\"Student not found\");\n    // }\n\n\n    if (student.studentId.toString() === studentId.toString()) {\n      setStudentName(student.firstName);\n      setSearchedStudentId(student.studentId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search a Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Student ID\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchStudent,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), studentName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: studentName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Query, \"/669Y5Ghmi6+nYRfptoQ7T/VuFI=\");\n\n_c = Query;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"names":["React","StudentService","Query","props","studentId","handleChange","studentName","setStudentName","useState","searchedStudentId","setSearchedStudentId","searchStudent","fetchData","response","getStudentById","console","log","data","error","alert","student","toString","firstName"],"sources":["/Users/johann/Documents/Johann PC/Documentos/Mis documentos/React/students-app/src/components/Query.js"],"sourcesContent":["import React from \"react\";\nimport StudentService from \"../services/StudentService\";\n\nexport default function Query(props) {\n  const { studentId, handleChange } = props;\n  const [studentName, setStudentName] = React.useState(\"\");\n  const [searchedStudentId, setSearchedStudentId] = React.useState();\n\n  async function searchStudent() {\n    const fetchData = async () => {\n      try {\n        const response = await StudentService.getStudentById(studentId);\n        console.log(response.data);\n        return response.data;\n      } catch (error) {\n        setStudentName(\"\");\n        alert(\"Student not found\");\n        console.log(error);\n      }\n    };\n\n    const student = async () => await fetchData();\n    //console.log(student);\n\n    // const data = await fetch(`http://localhost:8080/student/${studentId}`)\n    //   .then((response) => response.json())\n    //   .catch(() => {\n    //     return null;\n    //   });\n    // if (!data) {\n    //   setStudentName(\"\");\n    //   alert(\"Student not found\");\n    // }\n\n    if (student.studentId.toString() === studentId.toString()) {\n      setStudentName(student.firstName);\n      setSearchedStudentId(student.studentId);\n    }\n  }\n\n  return (\n    <div>\n      <h3>Search a Student</h3>\n      <input type=\"text\" placeholder=\"Student ID\" onChange={handleChange} />\n      <button onClick={searchStudent}>Search</button>\n      {studentName && <p>{studentName}</p>}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACnC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA8BF,KAApC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtC;EACA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CV,KAAK,CAACQ,QAAN,EAAlD;;EAEA,eAAeG,aAAf,GAA+B;IAC7B,MAAMC,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,cAAc,CAACa,cAAf,CAA8BV,SAA9B,CAAvB;QACAW,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;QACA,OAAOJ,QAAQ,CAACI,IAAhB;MACD,CAJD,CAIE,OAAOC,KAAP,EAAc;QACdX,cAAc,CAAC,EAAD,CAAd;QACAY,KAAK,CAAC,mBAAD,CAAL;QACAJ,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACD;IACF,CAVD;;IAYA,MAAME,OAAO,GAAG,YAAY,MAAMR,SAAS,EAA3C,CAb6B,CAc7B;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEA,IAAIQ,OAAO,CAAChB,SAAR,CAAkBiB,QAAlB,OAAiCjB,SAAS,CAACiB,QAAV,EAArC,EAA2D;MACzDd,cAAc,CAACa,OAAO,CAACE,SAAT,CAAd;MACAZ,oBAAoB,CAACU,OAAO,CAAChB,SAAT,CAApB;IACD;EACF;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC,YAA/B;MAA4C,QAAQ,EAAEC;IAAtD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEM,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAIGL,WAAW,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAJlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA7CuBJ,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}